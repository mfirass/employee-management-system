openapi: 3.0.3
info:
  title: Employee Management API
  version: 1.0.0
  description: API for managing employees in a company
servers:
  - url: http://localhost:8080/api/v1
paths:
  /employees:
    get:
      summary: Get all employees
      operationId: getAllEmployees
      responses:
        '200':
          description: List of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeResponse'
    post:
      summary: Add a new employee
      operationId: addEmployee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreateRequest'
      responses:
        '201':
          description: Employee created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
  /employees/{id}:
    get:
      summary: Get an employee by ID
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Employee details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update employee partially
      operationId: updateEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateRequest'
      responses:
        '200':
          description: Employee updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
    delete:
      summary: Delete an employee
      operationId: deleteEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Employee deleted
        '404':
          $ref: '#/components/responses/NotFound'
  /employees/search:
    get:
      summary: Search employees by various criteria
      operationId: searchEmployees
      parameters:
        - name: name
          in: query
          description: Employee's full name
          required: false
          schema:
            type: string
        - name: id
          in: query
          description: Employee ID
          required: false
          schema:
            type: string
        - name: department
          in: query
          description: Department name
          required: false
          schema:
            type: string
        - name: jobTitle
          in: query
          description: Job title
          required: false
          schema:
            type: string
        - name: employmentStatus
          in: query
          description: Employment status (e.g., active, terminated)
          required: false
          schema:
            type: string
        - name: hireDateFrom
          in: query
          description: Hire date (from) in ISO 8601 format (yyyy-MM-dd)
          required: false
          schema:
            type: string
            format: date
        - name: hireDateTo
          in: query
          description: Hire date (to) in ISO 8601 format (yyyy-MM-dd)
          required: false
          schema:
            type: string
            format: date
        - name: page
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
        - name: size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          description: Sorting criteria in the format `property,asc|desc` (e.g., `fullName,asc`)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Page of employee search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/EmployeeResponse'
                  pageable:
                    type: object
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
                  size:
                    type: integer
                  number:
                    type: integer
components:
  schemas:
    EmployeeCreateRequest:
      type: object
      properties:
        fullName:
          type: string
        jobTitle:
          type: string
        department:
          type: string
        hireDate:
          type: string
          format: date
        employmentStatus:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        address:
          type: string
      required:
        - fullName
        - jobTitle
        - department
        - hireDate
        - employmentStatus
        - email
        - phoneNumber
        - address
    EmployeeUpdateRequest:
      type: object
      properties:
        fullName:
          type: string
        jobTitle:
          type: string
        department:
          type: string
        hireDate:
          type: string
          format: date
        employmentStatus:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        address:
          type: string
    EmployeeResponse:
      type: object
      properties:
        employeeId:
          type: string
        fullName:
          type: string
        jobTitle:
          type: string
        department:
          type: string
        hireDate:
          type: string
          format: date
        employmentStatus:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        address:
          type: string
      required:
        - employeeId
        - fullName
        - jobTitle
        - department
        - hireDate
        - employmentStatus
        - email
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
